# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
builds:
- main: . 
  binary: TLSWebServer
  goos:
       - windows
       - linux
       - darwin
  goarch:
       - 386
       - amd64
       - arm
       - arm64
- env:
  - CGO_ENABLED=0
archive:
  name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os  }}_{{ .Arch  }}"
  replacements:
    darwin: Darwin
    linux: Linux
    windows: Windows
    386: i386
    amd64: x86_64
  format_overrides:
    - goos: windows
      format: zip
  files:
    - README.md
checksum:
  name_template: 'checksums.txt'
sign:
  artifacts: checksum      
  args: ["-u", "flw@posteo.de", "--output", "${signature}", "--detach-sign", "${artifact}"]
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
nfpm:
  # You can change the name of the package.
  # Default: `{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}`
  name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

  # Replacements for GOOS and GOARCH in the package name.
  # Keys should be valid GOOSs or GOARCHs.
  # Values are the respective replacements.
  # Default is empty.
  replacements:
    amd64: 64-bit
    386: 32-bit
    darwin: macOS
    linux: Linux 

  # Your app's vendor.
  # Default is empty.
  vendor: Scusi.io
  # Your app's homepage.
  # Default is empty.
  homepage: https://github.com/scusi/TLSWebServer

  # Your app's maintainer (probably you).
  # Default is empty.
  maintainer: Florian Walther flw@posteo.de

  # Your app's description.
  # Default is empty.
  description: a simple TLS webserver with multiple hostname support and sane TLS settings

  # Your app's license.
  # Default is empty.
  # license: Apache 2.0

  # Formats to be generated.
  formats:
    - deb
    - rpm

  # Override default /usr/local/bin destination for binaries
  bindir: /usr/local/bin

  # Empty folders that should be created and managed by the packager
  # implementation.
  # Default is empty.
  empty_folders:
          #- /etc/TLSWebServer
  - /var/log/TLSWebServer
  - /var/TLSWebServer/localhost/www
  - /var/TLSWebServer/localhost/tls

  # Files or directories to add to your package (beyond the binary).
  # Keys are source paths/globs to get the files from.
  # Values are the destination locations of the files in the package.
  files:
    "scripts/systemd/system/tlswebserver.service": "/etc/systemd/system/tlswebserver.service"
    #"scripts/openssl/localhost.conf": "/etc/TLSWebServer/localhost.conf"

  # Config files to add to your package. They are about the same as
  # the files keyword, except package managers treat them differently (while
  # uninstalling, mostly).
  # Keys are source paths/globs to get the files from.
  # Values are the destination locations of the files in the package.
  config_files:
    "config/config.json": "/etc/TLSWebServer/config.json"

  scripts:
    #preinstall: "scripts/preinstall.sh"
    postinstall: "scripts/postinstall.sh"
    #preremove: "scripts/preremove.sh"
    #postremove: "scripts/postremove.sh"

